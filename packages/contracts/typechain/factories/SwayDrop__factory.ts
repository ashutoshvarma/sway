/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwayDrop, SwayDropInterface } from "../SwayDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "TokenClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_roothash",
        type: "bytes32",
      },
    ],
    name: "addEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_swayAddr",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "isEventAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swayAddr",
        type: "address",
      },
    ],
    name: "setSway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swayAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_roothash",
        type: "bytes32",
      },
    ],
    name: "updateEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b50600054610100900460ff1680610031575060005460ff16155b6100985760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100ba576000805461ffff19166101011790555b80156100cc576000805461ff00191690555b5060805160601c6117c7610100600039600081816104470152818161048701528181610510015261055001526117c76000f3fe6080604052600436106100c25760003560e01c80635c975abb1161007f578063b9035d7e11610059578063b9035d7e14610225578063bce9e08914610254578063c3779fac14610274578063e41f67d01461029457600080fd5b80635c975abb146101b2578063697fa4c9146101ca5780637ab4339d1461020557600080fd5b806306fdde03146100c7578063120aa877146100f25780631b86d8121461013d5780633659cfe61461015f5780634f1ef2861461017f57806355e74ad614610192575b600080fd5b3480156100d357600080fd5b506100dc6102cc565b6040516100e9919061151b565b60405180910390f35b3480156100fe57600080fd5b5061012d61010d3660046113f0565b60cb60209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100e9565b34801561014957600080fd5b5061015d6101583660046112e0565b61035a565b005b34801561016b57600080fd5b5061015d61017a3660046112e0565b61043c565b61015d61018d3660046112fa565b610505565b34801561019e57600080fd5b5061015d6101ad366004611412565b6105bf565b3480156101be57600080fd5b5060975460ff1661012d565b3480156101d657600080fd5b506101f76101e53660046113d8565b60cc6020526000908152604090205481565b6040519081526020016100e9565b34801561021157600080fd5b5061015d610220366004611379565b610688565b34801561023157600080fd5b5061012d6102403660046113d8565b600090815260cc6020526040902054151590565b34801561026057600080fd5b5061015d61026f366004611433565b610745565b34801561028057600080fd5b5061015d61028f366004611412565b610a1b565b3480156102a057600080fd5b5060ca546102b4906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b60c980546102d9906116f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610305906116f2565b80156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b505050505081565b61036333610b54565b60ca54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b890602401602060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190611359565b806103f5575060ca546001600160a01b031633145b61041a5760405162461bcd60e51b815260040161041190611634565b60405180910390fd5b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104855760405162461bcd60e51b81526004016104119061154e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104b7610b9c565b6001600160a01b0316146104dd5760405162461bcd60e51b81526004016104119061159a565b6104e681610bca565b6040805160008082526020820190925261050291839190610cb1565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561054e5760405162461bcd60e51b81526004016104119061154e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610580610b9c565b6001600160a01b0316146105a65760405162461bcd60e51b81526004016104119061159a565b6105af82610bca565b6105bb82826001610cb1565b5050565b6105c833610b54565b60ca54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b890602401602060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106459190611359565b8061065a575060ca546001600160a01b031633145b6106765760405162461bcd60e51b815260040161041190611634565b600091825260cc602052604090912055565b600054610100900460ff16806106a1575060005460ff16155b6106bd5760405162461bcd60e51b8152600401610411906115e6565b600054610100900460ff161580156106df576000805461ffff19166101011790555b82516106f29060c99060208601906111d3565b5060ca80546001600160a01b0319166001600160a01b038416179055610716610df5565b61071e610e60565b610726610df5565b61072e610df5565b8015610740576000805461ff00191690555b505050565b600083815260cc60205260409020546107ab5760405162461bcd60e51b815260206004820152602260248201527f5377617944726f703a206576656e74206e6f7420616464656420666f7220647260448201526106f760f41b6064820152608401610411565b600083815260cb602090815260408083206001600160a01b038616845290915290205460ff161561082d5760405162461bcd60e51b815260206004820152602660248201527f5377617944726f703a20726563697069656e7420616c72656164792070726f6360448201526565737365642160d01b6064820152608401610411565b604080516020808201879052818301869052606085811b6bffffffffffffffffffffffff1916908301528251808303605401815260749092019092528051910120600090600085815260cc602052604090205490915061088f90839083610ed5565b6108eb5760405162461bcd60e51b815260206004820152602760248201527f5377617944726f703a20726563697069656e74206e6f7420696e206d65726b6c6044820152666520747265652160c81b6064820152608401610411565b600084815260cb602090815260408083206001600160a01b0387168085529252808320805460ff1916600117905551909186917f8b224b108d8f9c6d554b41182503c3f8b79dfcf17233a9366d50c386c28af8509190a360ca5460405163a140ae2360e01b8152600481018690526001600160a01b0385811660248301529091169063a140ae2390604401602060405180830381600087803b15801561099057600080fd5b505af11580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190611359565b610a145760405162461bcd60e51b815260206004820152601d60248201527f5377617944726f703a20636f756c64206e6f74206d696e7420535741590000006044820152606401610411565b5050505050565b610a2433610b54565b60ca54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b890602401602060405180830381600087803b158015610a6957600080fd5b505af1158015610a7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa19190611359565b80610ab6575060ca546001600160a01b031633145b610ad25760405162461bcd60e51b815260040161041190611634565b600082815260cc6020526040902054156106765760405162461bcd60e51b815260206004820152603d60248201527f5377617944726f703a3a6164644576656e743a204d65726b6c6520526f6f742060448201527f616c72656164792070726573656e7420666f7220746865206576656e740000006064820152608401610411565b6040516001600160a01b03821660248201526105029060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610eec565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b610bd333610b54565b60ca54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b890602401602060405180830381600087803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c509190611359565b6105025760405162461bcd60e51b815260206004820152602c60248201527f5377617944726f703a2073656e64657220646f6573206e6f742068617665204760448201526b6f7665726e6f7220526f6c6560a01b6064820152608401610411565b6000610cbb610b9c565b9050610cc684610f0d565b600083511180610cd35750815b15610ce457610ce28484610fb2565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610a1457805460ff191660011781556040516001600160a01b0383166024820152610d6390869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610fb2565b50805460ff19168155610d74610b9c565b6001600160a01b0316826001600160a01b031614610dec5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610411565b610a148561109d565b600054610100900460ff1680610e0e575060005460ff16155b610e2a5760405162461bcd60e51b8152600401610411906115e6565b600054610100900460ff16158015610e4c576000805461ffff19166101011790555b8015610502576000805461ff001916905550565b600054610100900460ff1680610e79575060005460ff16155b610e955760405162461bcd60e51b8152600401610411906115e6565b600054610100900460ff16158015610eb7576000805461ffff19166101011790555b6097805460ff191690558015610502576000805461ff001916905550565b6000610ee28484846110dd565b90505b9392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803b610f715760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610411565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6110115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610411565b600080846001600160a01b03168460405161102c91906114ff565b600060405180830381855af49150503d8060008114611067576040519150601f19603f3d011682016040523d82523d6000602084013e61106c565b606091505b5091509150611094828260405180606001604052806027815260200161176b6027913961119a565b95945050505050565b6110a681610f0d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600081815b855181101561118f57600086828151811061110d57634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161114f57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061117c565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806111878161172d565b9150506110e2565b509092149392505050565b606083156111a9575081610ee5565b8251156111b95782518084602001fd5b8160405162461bcd60e51b8152600401610411919061151b565b8280546111df906116f2565b90600052602060002090601f0160209004810192826112015760008555611247565b82601f1061121a57805160ff1916838001178555611247565b82800160010185558215611247579182015b8281111561124757825182559160200191906001019061122c565b50611253929150611257565b5090565b5b808211156112535760008155600101611258565b600067ffffffffffffffff83111561128657611286611754565b611299601f8401601f1916602001611691565b90508281528383830111156112ad57600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146112db57600080fd5b919050565b6000602082840312156112f1578081fd5b610ee5826112c4565b6000806040838503121561130c578081fd5b611315836112c4565b9150602083013567ffffffffffffffff811115611330578182fd5b8301601f81018513611340578182fd5b61134f8582356020840161126c565b9150509250929050565b60006020828403121561136a578081fd5b81518015158114610ee5578182fd5b6000806040838503121561138b578182fd5b823567ffffffffffffffff8111156113a1578283fd5b8301601f810185136113b1578283fd5b6113c08582356020840161126c565b9250506113cf602084016112c4565b90509250929050565b6000602082840312156113e9578081fd5b5035919050565b60008060408385031215611402578182fd5b823591506113cf602084016112c4565b60008060408385031215611424578182fd5b50508035926020909101359150565b60008060008060808587031215611448578182fd5b843593506020808601359350611460604087016112c4565b9250606086013567ffffffffffffffff8082111561147c578384fd5b818801915088601f83011261148f578384fd5b8135818111156114a1576114a1611754565b8060051b91506114b2848301611691565b8181528481019084860184860187018d10156114cc578788fd5b8795505b838610156114ee5780358352600195909501949186019186016114d0565b50989b979a50959850505050505050565b600082516115118184602087016116c2565b9190910192915050565b602081526000825180602084015261153a8160408501602087016116c2565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252603b908201527f5377617944726f703a2073656e646572206973206e6f742053776179206f722060408201527f646f6573206e6f74206861766520476f7665726e6f7220526f6c650000000000606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156116ba576116ba611754565b604052919050565b60005b838110156116dd5781810151838201526020016116c5565b838111156116ec576000848401525b50505050565b600181811c9082168061170657607f821691505b6020821081141561172757634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561174d57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122094bf3ca9c65b5137018fe42ce7c27c262799152df2eb479d76af706805f31a3a64736f6c63430008040033";

export class SwayDrop__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwayDrop> {
    return super.deploy(overrides || {}) as Promise<SwayDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwayDrop {
    return super.attach(address) as SwayDrop;
  }
  connect(signer: Signer): SwayDrop__factory {
    return super.connect(signer) as SwayDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwayDropInterface {
    return new utils.Interface(_abi) as SwayDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwayDrop {
    return new Contract(address, _abi, signerOrProvider) as SwayDrop;
  }
}
