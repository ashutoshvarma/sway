/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwayDrop, SwayDropInterface } from "../SwayDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
    ],
    name: "SwayAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "TokenClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_roothash",
        type: "bytes32",
      },
    ],
    name: "addEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_swayAddr",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "isEventAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_swayAddr",
        type: "address",
      },
    ],
    name: "setSway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swayAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_roothash",
        type: "bytes32",
      },
    ],
    name: "updateEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b50600054610100900460ff1680610031575060005460ff16155b6100985760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100ba576000805461ffff19166101011790555b80156100cc576000805461ff00191690555b5060805160601c611c8a610100600039600081816104a3015281816104e30152818161065601526106960152611c8a6000f3fe6080604052600436106100e85760003560e01c80635c975abb1161008a578063b9035d7e11610059578063b9035d7e14610275578063bce9e089146102a4578063c3779fac146102c4578063e41f67d0146102e457600080fd5b80635c975abb146101ed578063697fa4c9146102055780637ab4339d146102405780638456cb591461026057600080fd5b80633659cfe6116100c65780633659cfe6146101855780633f4ba83a146101a55780634f1ef286146101ba57806355e74ad6146101cd57600080fd5b806306fdde03146100ed578063120aa877146101185780631b86d81214610163575b600080fd5b3480156100f957600080fd5b5061010261031c565b60405161010f9190611931565b60405180910390f35b34801561012457600080fd5b50610153610133366004611806565b60fd60209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161010f565b34801561016f57600080fd5b5061018361017e3660046116f6565b6103aa565b005b34801561019157600080fd5b506101836101a03660046116f6565b610498565b3480156101b157600080fd5b50610183610561565b6101836101c8366004611710565b61064b565b3480156101d957600080fd5b506101836101e8366004611828565b610705565b3480156101f957600080fd5b5060975460ff16610153565b34801561021157600080fd5b506102326102203660046117ee565b60fe6020526000908152604090205481565b60405190815260200161010f565b34801561024c57600080fd5b5061018361025b36600461178f565b6107f0565b34801561026c57600080fd5b506101836108a3565b34801561028157600080fd5b506101536102903660046117ee565b600090815260fe6020526040902054151590565b3480156102b057600080fd5b506101836102bf366004611849565b610965565b3480156102d057600080fd5b506101836102df366004611828565b610c5e565b3480156102f057600080fd5b5060fc54610304906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b60fb805461032990611bb5565b80601f016020809104026020016040519081016040528092919081815260200182805461035590611bb5565b80156103a25780601f10610377576101008083540402835291602001916103a2565b820191906000526020600020905b81548152906001019060200180831161038557829003601f168201915b505050505081565b600260c95414156103d65760405162461bcd60e51b81526004016103cd90611b1d565b60405180910390fd5b600260c95560fc54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b89060240160206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610456919061176f565b8061046b575060fc546001600160a01b031633145b6104875760405162461bcd60e51b81526004016103cd90611ac0565b61049081610db4565b50600160c955565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104e15760405162461bcd60e51b81526004016103cd90611964565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610513610e69565b6001600160a01b0316146105395760405162461bcd60e51b81526004016103cd906119b0565b61054281610e97565b6040805160008082526020820190925261055e91839190610f2e565b50565b60fc54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b89060240160206040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc919061176f565b6105f85760405162461bcd60e51b81526004016103cd906119fc565b60975460ff166106415760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103cd565b610649611072565b565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106945760405162461bcd60e51b81526004016103cd90611964565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106c6610e69565b6001600160a01b0316146106ec5760405162461bcd60e51b81526004016103cd906119b0565b6106f582610e97565b61070182826001610f2e565b5050565b600260c95414156107285760405162461bcd60e51b81526004016103cd90611b1d565b600260c95560fc54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b89060240160206040518083038186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a8919061176f565b806107bd575060fc546001600160a01b031633145b6107d95760405162461bcd60e51b81526004016103cd90611ac0565b600091825260fe602052604090912055600160c955565b600054610100900460ff1680610809575060005460ff16155b6108255760405162461bcd60e51b81526004016103cd90611a72565b600054610100900460ff16158015610847576000805461ffff19166101011790555b825161085a9060fb9060208601906115e9565b5061086482610db4565b61086c611105565b610874611170565b61087c611105565b610884611105565b61088c6111e5565b801561089e576000805461ff00191690555b505050565b60fc54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b89060240160206040518083038186803b1580156108e657600080fd5b505afa1580156108fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091e919061176f565b61093a5760405162461bcd60e51b81526004016103cd906119fc565b60975460ff161561095d5760405162461bcd60e51b81526004016103cd90611a48565b610649611244565b60975460ff16156109885760405162461bcd60e51b81526004016103cd90611a48565b600083815260fe60205260409020546109ee5760405162461bcd60e51b815260206004820152602260248201527f5377617944726f703a206576656e74206e6f7420616464656420666f7220647260448201526106f760f41b60648201526084016103cd565b600083815260fd602090815260408083206001600160a01b038616845290915290205460ff1615610a705760405162461bcd60e51b815260206004820152602660248201527f5377617944726f703a20726563697069656e7420616c72656164792070726f6360448201526565737365642160d01b60648201526084016103cd565b604080516020808201879052818301869052606085811b6bffffffffffffffffffffffff1916908301528251808303605401815260749092019092528051910120600090600085815260fe6020526040902054909150610ad29083908361129c565b610b2e5760405162461bcd60e51b815260206004820152602760248201527f5377617944726f703a20726563697069656e74206e6f7420696e206d65726b6c6044820152666520747265652160c81b60648201526084016103cd565b600084815260fd602090815260408083206001600160a01b0387168085529252808320805460ff1916600117905551909186917f8b224b108d8f9c6d554b41182503c3f8b79dfcf17233a9366d50c386c28af8509190a360fc5460405163a140ae2360e01b8152600481018690526001600160a01b0385811660248301529091169063a140ae2390604401602060405180830381600087803b158015610bd357600080fd5b505af1158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b919061176f565b610c575760405162461bcd60e51b815260206004820152601d60248201527f5377617944726f703a20636f756c64206e6f74206d696e74205357415900000060448201526064016103cd565b5050505050565b600260c9541415610c815760405162461bcd60e51b81526004016103cd90611b1d565b600260c95560fc54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b89060240160206040518083038186803b158015610cc957600080fd5b505afa158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d01919061176f565b80610d16575060fc546001600160a01b031633145b610d325760405162461bcd60e51b81526004016103cd90611ac0565b600082815260fe6020526040902054156107d95760405162461bcd60e51b815260206004820152603d60248201527f5377617944726f703a3a6164644576656e743a204d65726b6c6520526f6f742060448201527f616c72656164792070726573656e7420666f7220746865206576656e7400000060648201526084016103cd565b6001600160a01b038116610e185760405162461bcd60e51b815260206004820152602560248201527f5377617944726f703a2073776179416464722073686f756c64206265206e6f6e6044820152642d7a65726f60d81b60648201526084016103cd565b60fc80546001600160a01b038381166001600160a01b03198316811790935560405191169182917f42f883e00bd5614a45fcc3efaaec8a99869f5e223adb347925f8b5ed676e2f5d90600090a35050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b60fc54604051631c86b03760e31b81523360048201526001600160a01b039091169063e43581b89060240160206040518083038186803b158015610eda57600080fd5b505afa158015610eee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f12919061176f565b61055e5760405162461bcd60e51b81526004016103cd906119fc565b6000610f38610e69565b9050610f43846112b3565b600083511180610f505750815b15610f6157610f5f8484611358565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610c5757805460ff191660011781556040516001600160a01b0383166024820152610fe090869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611358565b50805460ff19168155610ff1610e69565b6001600160a01b0316826001600160a01b0316146110695760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084016103cd565b610c5785611443565b60975460ff166110bb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103cd565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff168061111e575060005460ff16155b61113a5760405162461bcd60e51b81526004016103cd90611a72565b600054610100900460ff1615801561115c576000805461ffff19166101011790555b801561055e576000805461ff001916905550565b600054610100900460ff1680611189575060005460ff16155b6111a55760405162461bcd60e51b81526004016103cd90611a72565b600054610100900460ff161580156111c7576000805461ffff19166101011790555b6097805460ff19169055801561055e576000805461ff001916905550565b600054610100900460ff16806111fe575060005460ff16155b61121a5760405162461bcd60e51b81526004016103cd90611a72565b600054610100900460ff1615801561123c576000805461ffff19166101011790555b61115c611483565b60975460ff16156112675760405162461bcd60e51b81526004016103cd90611a48565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110e83390565b60006112a98484846114f3565b90505b9392505050565b803b6113175760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103cd565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6113b75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103cd565b600080846001600160a01b0316846040516113d29190611915565b600060405180830381855af49150503d806000811461140d576040519150601f19603f3d011682016040523d82523d6000602084013e611412565b606091505b509150915061143a8282604051806060016040528060278152602001611c2e602791396115b0565b95945050505050565b61144c816112b3565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff168061149c575060005460ff16155b6114b85760405162461bcd60e51b81526004016103cd90611a72565b600054610100900460ff161580156114da576000805461ffff19166101011790555b600160c955801561055e576000805461ff001916905550565b600081815b85518110156115a557600086828151811061152357634e487b7160e01b600052603260045260246000fd5b60200260200101519050808311611565576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611592565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061159d81611bf0565b9150506114f8565b509092149392505050565b606083156115bf5750816112ac565b8251156115cf5782518084602001fd5b8160405162461bcd60e51b81526004016103cd9190611931565b8280546115f590611bb5565b90600052602060002090601f016020900481019282611617576000855561165d565b82601f1061163057805160ff191683800117855561165d565b8280016001018555821561165d579182015b8281111561165d578251825591602001919060010190611642565b5061166992915061166d565b5090565b5b80821115611669576000815560010161166e565b600067ffffffffffffffff83111561169c5761169c611c17565b6116af601f8401601f1916602001611b54565b90508281528383830111156116c357600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146116f157600080fd5b919050565b600060208284031215611707578081fd5b6112ac826116da565b60008060408385031215611722578081fd5b61172b836116da565b9150602083013567ffffffffffffffff811115611746578182fd5b8301601f81018513611756578182fd5b61176585823560208401611682565b9150509250929050565b600060208284031215611780578081fd5b815180151581146112ac578182fd5b600080604083850312156117a1578182fd5b823567ffffffffffffffff8111156117b7578283fd5b8301601f810185136117c7578283fd5b6117d685823560208401611682565b9250506117e5602084016116da565b90509250929050565b6000602082840312156117ff578081fd5b5035919050565b60008060408385031215611818578182fd5b823591506117e5602084016116da565b6000806040838503121561183a578182fd5b50508035926020909101359150565b6000806000806080858703121561185e578182fd5b843593506020808601359350611876604087016116da565b9250606086013567ffffffffffffffff80821115611892578384fd5b818801915088601f8301126118a5578384fd5b8135818111156118b7576118b7611c17565b8060051b91506118c8848301611b54565b8181528481019084860184860187018d10156118e2578788fd5b8795505b838610156119045780358352600195909501949186019186016118e6565b50989b979a50959850505050505050565b60008251611927818460208701611b85565b9190910192915050565b6020815260008251806020840152611950816040850160208701611b85565b601f01601f19169190910160400192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602c908201527f5377617944726f703a2073656e64657220646f6573206e6f742068617665204760408201526b6f7665726e6f7220526f6c6560a01b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252603b908201527f5377617944726f703a2073656e646572206973206e6f742053776179206f722060408201527f646f6573206e6f74206861766520476f7665726e6f7220526f6c650000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b7d57611b7d611c17565b604052919050565b60005b83811015611ba0578181015183820152602001611b88565b83811115611baf576000848401525b50505050565b600181811c90821680611bc957607f821691505b60208210811415611bea57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611c1057634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122095e180eda9352b78a9e97a5e506f01a2c406ace1a89954c44cbf873f4f7364ba64736f6c63430008040033";

export class SwayDrop__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwayDrop> {
    return super.deploy(overrides || {}) as Promise<SwayDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwayDrop {
    return super.attach(address) as SwayDrop;
  }
  connect(signer: Signer): SwayDrop__factory {
    return super.connect(signer) as SwayDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwayDropInterface {
    return new utils.Interface(_abi) as SwayDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwayDrop {
    return new Contract(address, _abi, signerOrProvider) as SwayDrop;
  }
}
