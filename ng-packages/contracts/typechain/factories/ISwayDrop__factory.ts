/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ISwayDrop, ISwayDropInterface } from "../ISwayDrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_roothash",
        type: "bytes32",
      },
    ],
    name: "addEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "isEventAdded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sway",
        type: "address",
      },
    ],
    name: "setSway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISwayDrop__factory {
  static readonly abi = _abi;
  static createInterface(): ISwayDropInterface {
    return new utils.Interface(_abi) as ISwayDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISwayDrop {
    return new Contract(address, _abi, signerOrProvider) as ISwayDrop;
  }
}
